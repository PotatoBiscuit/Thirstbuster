package com.CS477.drinkandgo;

import java.util.HashMap;

import org.json.JSONException;
import org.json.JSONObject;

import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.TextView;

import com.CS477.drinkandgo.activities.DrinkAndGoActivity;
import com.CS477.drinkandgo.activities.MainActivity;
import com.CS477.drinkandgo.listeners.DrinkAndGoErrorListener;
import com.android.volley.Response.Listener;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

public class OrderActivity extends DrinkAndGoActivity 
{
	private String status;
	private Integer orderNum;
	private Venue venue;
	
	private final Handler handler;
	
	public OrderActivity() 
	{	
		super(R.layout.activity_order);
		handler = new Handler();
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		
		TextView order = (TextView) findViewById(R.id.order_number);
		orderNum = (Integer) getIntent().getSerializableExtra("Integer");
		order.setText(orderNum.toString());
		
		venue = (Venue) getIntent().getSerializableExtra("Venue");
		
		handler.postDelayed(new GetStatus(), 10000);
	}
	
	@Override
	public void goBack(View view)
	{	startActivity(MainActivity.class);}
	
	private class GetStatus implements Runnable, Listener<String>
	{
		@Override
		public void run() 
		{	Volley.newRequestQueue(OrderActivity.this).add(new GetStatusRequest(this));}

		@Override
		public void onResponse(String str) 
		{
			try
			{
				JSONObject obj = new JSONObject(str);
				status = obj.getString("status");
				((TextView) findViewById(R.id.status)).setText(status);
				if(status.equals("complete"))
					findViewById(R.id.home_button).setVisibility(View.VISIBLE);
				else
					handler.postDelayed(this, 10000);
			}
			catch(JSONException j)
			{}
		}	
	}
	
	private class GetStatusRequest extends StringRequest
	{
		private final HashMap<String, String> params;
		
		public GetStatusRequest(Listener<String> listener) 
		{
			super(Method.GET, STATUS_URL, listener, 
			new DrinkAndGoErrorListener(OrderActivity.this));
			
			params = new HashMap<String, String>();
			params.put("id", orderNum.toString());
			params.put("customer_id", getCustomer().getId());
			params.put("venue_id", venue.getId());
		}
		
		@Override
		public HashMap<String, String> getParams()
		{	return params;}
	}
}
